{"version":3,"sources":["logo.svg","components/Card.js","components/CardsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","key","name","occupation","photoUrl","onClick","handleClick","style","background","margin","height","width","src","CardsContainer","cards","setCards","updateState","currentScore","setCurrentScore","bestScore","setBestScore","forceUpdate","useCallback","useEffect","console","log","uniqid","picked","onClickShuffle","shuffledCards","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","handleClickAction","forEach","element","card","display","gridTemplateColumns","gridTemplateRows","map","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf80fd52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { useState } from \"react\";\n\nconst Card = (props) => {\n  const [key, setKey] = useState(props.key);\n  const [name, setName] = useState(props.name);\n  const [occupation, setOccupation] = useState(props.occupation);\n  const [photoUrl, setPhotoUrl] = useState(props.photoUrl);\n\n  return (\n    <div\n      onClick={() => props.handleClick(props.name)}\n      style={{\n        background: \"red\",\n        margin: \"20px\",\n        height: \"100%\",\n        width: \"250px\",\n      }}\n    >\n      <h1>{name}</h1>\n      <br />\n      <h2>{occupation}</h2>\n      <img style={{ width: \"80%\" }} src={photoUrl}></img>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useEffect, useState, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport uniqid from \"uniqid\";\n\nconst CardsContainer = () => {\n  const [cards, setCards] = useState([]);\n  const [, updateState] = useState();\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  useEffect(() => {\n    console.log(\"init\");\n    setCards([\n      {\n        key: uniqid(),\n        picked: false,\n        name: \"Angelina Jolie Voight\",\n        occupation: \"Actress, Director\",\n        photoUrl:\n          \"http://beauty-around.com/images/sampledata/Hollywood_Actress/1Anjelina-Jolie.jpg\",\n      },\n      {\n        key: uniqid(),\n        picked: false,\n        name: \"Charlize Theron\",\n        occupation: \"Model, Actress\",\n        photoUrl:\n          \"http://beauty-around.com/images/sampledata/Hollywood_Actress/2sharliz.jpg\",\n      },\n      {\n        key: uniqid(),\n        picked: false,\n        name: \"Jessica Alba\",\n        occupation: \"Model, Actress\",\n        photoUrl:\n          \"http://beauty-around.com/images/sampledata/Hollywood_Actress/3Alba.jpg\",\n      },\n      {\n        key: uniqid(),\n        picked: false,\n        name: \"Megan Denise Fox\",\n        occupation: \"Model, Actress\",\n        photoUrl:\n          \"http://beauty-around.com/images/sampledata/Hollywood_Actress/4Megan_Fox.jpg\",\n      },\n      {\n        key: uniqid(),\n        picked: false,\n        name: \"Keira Knightley\",\n        occupation: \"Actress\",\n        photoUrl:\n          \"http://beauty-around.com/images/sampledata/Hollywood_Actress/6Keira_Knightley.jpg\",\n      },\n    ]);\n  }, []);\n\n  const shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  const onClickShuffle = () => {\n    let shuffledCards = shuffle(cards);\n\n    setCards(shuffledCards);\n    forceUpdate();\n  };\n\n  const handleClickAction = (name) => {\n    console.log(\"clicked \" + name);\n\n    cards.forEach((element) => {\n      if (element.name === name) {\n        if (!element.picked) {\n          element.picked = true;\n          setCurrentScore(currentScore + 1);\n        } else {\n          if (currentScore > bestScore) setBestScore(currentScore);\n          setCurrentScore(0);\n          cards.forEach((card) => {\n            card.picked = false;\n          });\n        }\n      }\n    });\n    onClickShuffle();\n  };\n\n  return (\n    <div>\n      <div>\n        <div>\n          Current score: {currentScore}\n          <br />\n          Best score: {bestScore}\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"grid\",\n          width: \"100%\",\n          height: \"100%\",\n          gridTemplateColumns: \"repeat(6, 1fr)\",\n          gridTemplateRows: \"repeat(5, 1fr)\",\n        }}\n      >\n        {cards.map((card) => {\n          return (\n            <div>\n              <Card\n                key={card.key}\n                picked={card.picked}\n                name={card.name}\n                occupation={card.occupation}\n                photoUrl={card.photoUrl}\n                handleClick={handleClickAction}\n              ></Card>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CardsContainer;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CardsContainer from \"./components/CardsContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardsContainer></CardsContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}